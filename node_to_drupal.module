<?php

/**
 * Implements hook_menu().
 *
 * Opening up a page that only displays the form.
 *
 */
function node_to_drupal_menu() {
  $items['message-watchdog'] = array(
    'title' => 'Log an event to watchdog',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('node_to_drupal_form'),
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * node_to_drupal_form()
 *
 * A VERY simple form for our menu callback.
 *
 */
function node_to_drupal_form($form , &$form_state) {
  drupal_add_js(drupal_get_path('module', 'node_to_drupal') . '/node_to_drupal.client.js');

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Create a log entry!'),
  );

  return $form;
}

/**
 * Implements hook_nodejs_message_callback().
 *
 * Look for the 'nodeToDrupal' as our 'messageType' coming from the node server.
 * If we've found it, then define a custom handler and pass it back.
 *
 */
function node_to_drupal_nodejs_message_callback($type) {
  switch($type) {
    case 'nodeToDrupal':
      return array('node_to_drupal_handler');
  }
  return false;
}

/**
 * node_to_drupal_handler()
 *
 * A callback handler that was specified in hook_nodejs_message_callback().
 * If this handler fires it means we have recieved a message of the correct type.
 * Perform the log to watchdog, and shoot back a responce to node.
 *
 */
function node_to_drupal_handler($message, &$responce) {
  watchdog('node_to_drupal', $message['messageBody'], array(), WATCHDOG_INFO);
  $responce = 'Message logged to Watchdog!';
}

